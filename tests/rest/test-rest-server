#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#
# Test otbr rest server
#

set -euxo pipefail

main()
{
    sudo expect <<EOF
spawn "${CMAKE_BINARY_DIR}/src/agent/otbr-agent" -d 7 -v -I wpan0 -B lo "spinel+hdlc+forkpty://$(command -v ot-rcp)?forkpty-arg=1"
expect "Start Thread Border Agent"
set otbr_agent \$spawn_id
spawn "${CMAKE_BINARY_DIR}/third_party/openthread/repo/src/posix/ot-ctl"
expect_after {
    -i \$otbr_agent eof { error "unexpected exit" }
}
send "dataset init new\r\n"
expect "Done"
send "dataset commit active\r\n"
expect "Done"
send "ifconfig up\r\n"
expect "Done"
send "routerselectionjitter 1\r\n"
expect "Done"
send "thread start\r\n"
expect "Done"
send "state leader\r\n"
expect "Done"
send "srp server disable\r\n"
expect "Done"
expect {
    -timeout 1 leader {
        expect "Done"
        send_user "waiting to become leader..\r\n"
    }
    timeout { send "state\r\n" }
}
send "\x04"
expect eof

spawn python3 "${CMAKE_CURRENT_SOURCE_DIR}/test_rest.py"
expect {
    eof {
        lassign [wait] _ _ error status
    }
    -i \$otbr_agent eof { error "unexpected exit" }
}

if {\$error == 0} {
    exit \$status
} else {
    system errno \$status
    error "failed to run the test"
}
EOF
}

main "$@"
